model AssignmentSubmission {
  // Fields
  id             String           @id @default(uuid())
  status         SubmissionStatus
  submissionText String?
  submissionUrl  String?
  submittedAt    DateTime?        @default(now())
  gradedAt       DateTime?
  score          Float?
  feedback       String?

  // Audit Fields
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Audit Relations
  createdById String
  createdBy   User   @relation("AssignmentSubmissionCreatedBy", fields: [createdById], references: [id])
  updatedById String
  updatedBy   User   @relation("AssignmentSubmissionUpdatedBy", fields: [updatedById], references: [id])

  // Profile Relations
  gradedById  String?
  gradedBy    Profile? @relation("GradedBy", fields: [gradedById], references: [id])
  submitterId String?
  submitter   Profile? @relation(fields: [submitterId], references: [id])

  // Relationships
  assignmentId String
  assignment   Assignment                   @relation(fields: [assignmentId], references: [id])
  files        Media[]                      @relation("AssignmentSubmissionFiles")
  answers      AssignmentSubmissionAnswer[]
}

enum SubmissionStatus {
  DRAFT
  SUBMITTED
  LATE
  GRADED
}
