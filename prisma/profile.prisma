model Profile {
    id     String @id @default(uuid())
    userId String @unique
    user   User   @relation("ProfileUser", fields: [userId], references: [id])

    // Core Identity
    firstName        String
    lastName         String
    username         String?
    jobTitle         String?
    department       String?
    bio              String?
    profilePictureId String? @unique
    profilePicture   Media?  @relation("ProfilePicture", fields: [profilePictureId], references: [id])

    // Communication & Preferences
    email                   String
    phoneNumber             String
    timezone                String?
    languagePreference      String?
    notificationPreferences Json?

    // Location & Addressing
    locationId String?
    location   Location? @relation("LocationProfile", fields: [locationId], references: [id])

    // Employment / Affiliation
    companyId String? //if user works in a company
    company   Company? @relation(fields: [companyId], references: [id])

    // Web3 Wallet
    walletAddress String? @unique

    // Socials & Metadata
    socialMediaLinks Json? // { "linkedin": "...", "twitter": "...", etc. }
    customFields     Json? // Extensible field for anything else (certs, licenses, etc.)

    // Form & Onboarding Meta
    onboardingCompleted Boolean @default(false)

    // Applications
    classApplicationResponses       ClassApplicationResponse[]
    classApplicationResponseReviews ClassApplicationResponse[] @relation("ClassApplicationResponseReviewedBy")
    classApplications               ClassApplication[]

    // Assignments & Projects
    assignmentSubmissions AssignmentSubmission[]
    projectCollaborations ProjectCollaborator[]  @relation("ProjectCollaboratorProfile")

    // Skills & Tags
    skills         UserSkill[] //user's skills
    endorsedSkills UserSkill[] @relation("SkillEndorsements") // skills this profile endorsed
    tags           Tag[]       @relation("ProfileTags") //reference to tag model

    // Work Experience
    workHistory WorkHistory[] @relation("WorkHistoryProfile")

    // If user is a contact point for a company
    companyContacts CompanyContact[] @relation("CompanyContactProfile")

    media Media[] @relation("ProfileMedia")

    //metadata tracking
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    createdById String
    createdBy   User   @relation("ProfileCreatedBy", fields: [createdById], references: [id])

    updatedById String
    updatedBy   User   @relation("ProfileUpdatedBy", fields: [updatedById], references: [id])
}
