enum JobPostingRemoteOption {
    ON_SITE
    HYBRID
    REMOTE
}

enum JobPostingEmploymentType {
    FULL_TIME
    PART_TIME
    CONTRACT
    INTERNSHIP
}

enum JobPostingExperienceLevel {
    ENTRY
    MID
    SENIOR
    EXECUTIVE
}

enum JobPostingStatus {
    DRAFT
    OPEN
    FILLED
    CLOSED
}

model JobPostingIndustry {
    jobPostingId String
    industryId   String
    jobPosting   JobPosting @relation(fields: [jobPostingId], references: [id])
    industry     Industry   @relation(fields: [industryId], references: [id])

    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    deletedAt   DateTime?
    createdById String
    createdBy   User      @relation("JobPostingIndustryCreatedBy", fields: [createdById], references: [id])
    updatedById String
    updatedBy   User      @relation("JobPostingIndustryUpdatedBy", fields: [updatedById], references: [id])

    @@id([jobPostingId, industryId])
}

model JobPosting {
    id                      String                    @id @default(uuid())
    companyId               String
    company                 Company                   @relation(fields: [companyId], references: [id])
    title                   String
    description             String
    shortDescription        String
    location                String
    remoteOption            JobPostingRemoteOption
    employmentType          JobPostingEmploymentType
    experienceLevel         JobPostingExperienceLevel
    educationRequirements   String?
    salaryMin               Float?
    salaryMax               Float?
    benefits                String?
    applicationInstructions String?
    externalPostingUrl      String?
    internalNotes           String?
    status                  JobPostingStatus          @default(DRAFT)
    postedDate              DateTime?
    deadlineDate            DateTime?
    industries              JobPostingIndustry[]
    applicants JobApplication[]


    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deletedAt DateTime?

    createdById String
    createdBy   User   @relation("JobPostingCreatedBy", fields: [createdById], references: [id])

    updatedById String
    updatedBy   User   @relation("JobPostingUpdatedBy", fields: [updatedById], references: [id])
}
