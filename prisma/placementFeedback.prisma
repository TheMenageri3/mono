model PlacementFeedback {
    // Fields
    id                     String            @id @default(uuid())
    feedbackType           FeedbackType
    satisfactionLevel      SatisfactionLevel
    preparednessRating     Int // (1-5 scale)
    skillsMatchRating      Int // (1-5 scale)
    cultureFitRating       Int // (1-5 scale)
    feedbackText           String            @db.Text
    improvementSuggestions String?           @db.Text
    followUpNeeded         Boolean           @default(false)

    // Custodial Fields
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    deletedAt   DateTime?

    // Custodial Relations
    createdById String
    createdBy   User   @relation("FeedbackCreatedBy", fields: [createdById], references: [id])
    updatedById String
    updatedBy   User   @relation("FeedbackUpdatedBy", fields: [updatedById], references: [id])

    // Profile Relations
    respondentId String
    respondent   Profile @relation("FeedbackRespondent", fields: [respondentId], references: [id])

    // Relationships
    placementId String
    placement   Placement @relation(fields: [placementId], references: [id])

    @@index([placementId])
    @@index([respondentId])
    @@index([createdById])
    @@index([updatedById])
    @@map("placement_feedback")
}

// Enums
enum FeedbackType {
    STUDENT
    EMPLOYER
    ADMIN
}

enum SatisfactionLevel {
    VERY_SATISFIED
    SATISFIED
    NEUTRAL
    DISSATISFIED
    VERY_DISSATISFIED
}
