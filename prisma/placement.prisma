model Placement {
  // Fields
  id                  String         @id @default(uuid())
  jobTitle            String
  employmentType      EmploymentType
  startDatetime       DateTime
  endDatetime         DateTime?
  isCurrent           Boolean
  salary              Float
  compensationDetails String?
  matchQuality        MatchQuality
  verified            Boolean        @default(false)
  verificationDate    DateTime?

  // Audit Fields
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Audit Relations
  createdById String
  createdBy   User   @relation("PlacementCreatedBy", fields: [createdById], references: [id])
  updatedById String
  updatedBy   User   @relation("PlacementUpdatedBy", fields: [updatedById], references: [id])

  // Profile Relations
  profileId              String
  profile                Profile @relation("ProfilePlacements", fields: [profileId], references: [id])
  placementFacilitatorId String
  placementFacilitator   Profile @relation("PlacementFacilitator", fields: [placementFacilitatorId], references: [id])

  // Relationships
  companyId         String
  company           Company             @relation(fields: [companyId], references: [id])
  jobApplicationId  String?
  jobApplication    JobApplication?     @relation(fields: [jobApplicationId], references: [id])
  placementFeedback PlacementFeedback[]
}

// Enums
enum MatchQuality {
  EXCELLENT
  GOOD
  FAIR
  POOR
}
